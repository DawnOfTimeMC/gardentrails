plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
}
base {
    archivesName = "${mod_id}-fabric-${minecraft_version}"
}

repositories {
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = "Xander Maven"
        url = "https://maven.isxander.dev/releases"
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation "dev.isxander:yet-another-config-lib:${project.yacl_version}-fabric"
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    modImplementation "maven.modrinth:fusion-connected-textures:1.2.11-fabric-mc1.21"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
}

loom {
    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}
