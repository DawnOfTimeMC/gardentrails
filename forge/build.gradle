plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev.legacyforge'
}

mixin {
    add(sourceSets.main, "${mod_id}.refmap.json")

    config("${mod_id}.mixins.json")
    config("${mod_id}.forge.mixins.json")
}

legacyForge {
    version = "${minecraft_version}-${forge_version}"

    validateAccessTransformers = true

    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.from(at.absolutePath) //["src/main/resources/META-INF/accesstransformer.cfg"]
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        client {
            client()
        }
        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
        server {
            server()
        }
    }

    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    maven {
        url = "https://api.modrinth.com/maven"
    }
}

dependencies {
    compileOnly project(":common")

    modImplementation("maven.modrinth:yacl:${project.yacl_version}-forge")

    // Mod compatibility

    modRuntimeOnly("maven.modrinth:rei:IoS2AjPk")
    modRuntimeOnly("maven.modrinth:cloth-config:t8TXrZvZ")
    modRuntimeOnly("maven.modrinth:architectury-api:1MKTLiiG")
    modRuntimeOnly("maven.modrinth:geckolib:LwI6czff")

    modRuntimeOnly("maven.modrinth:lets-do-vinery:YpD6ue8A")
    modRuntimeOnly("maven.modrinth:farmers-delight:NcRp00OO")
    modRuntimeOnly("maven.modrinth:critters-and-companions:acDDSIG3")
    modRuntimeOnly("maven.modrinth:fusion-connected-textures:1.1.1-forge-mc1.20.1")

    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")
    implementation 'org.jetbrains:annotations:26.0.2'
}

jar {
    finalizedBy('reobfJar')
    manifest.attributes([
            "MixinConfigs": "${mod_id}.mixins.json,${mod_id}.forge.mixins.json"
    ])
}
